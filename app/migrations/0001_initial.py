# Generated by Django 3.2.7 on 2021-09-30 19:38

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import jsonfield.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('category_id', models.IntegerField(auto_created=True, primary_key=True, serialize=False)),
                ('answer', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Decade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Dummy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_type', models.CharField(max_length=10)),
                ('category', models.CharField(max_length=10)),
                ('decade', models.CharField(max_length=10)),
                ('genre', models.CharField(max_length=10)),
                ('word', models.CharField(max_length=10)),
                ('selection', jsonfield.fields.JSONField(default=dict)),
            ],
        ),
        migrations.CreateModel(
            name='Feelings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer', models.CharField(max_length=100)),
                ('choice', models.CharField(choices=[('Spirit', 'Spirit'), ('Profession', 'Profession'), ('Purpose', 'Purpose'), ('Reward', 'Reward')], max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Intensity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer', models.CharField(max_length=100)),
                ('choice', models.CharField(choices=[('Need', 'Need'), ('Wish', 'Wish'), ('Desire', 'Desire'), ('Want', 'Want')], max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='LifeVector',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(max_length=300)),
                ('tags', jsonfield.fields.JSONField(null=True)),
                ('need', jsonfield.fields.JSONField(default=dict)),
                ('wish', jsonfield.fields.JSONField(default=dict)),
                ('desire', jsonfield.fields.JSONField(default=dict)),
                ('want', jsonfield.fields.JSONField(default=dict)),
            ],
        ),
        migrations.CreateModel(
            name='SubCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer', models.CharField(max_length=100)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='category_belong', to='app.category')),
            ],
        ),
        migrations.CreateModel(
            name='Qpen',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_type', models.CharField(choices=[('LV', 'Life Vector'), ('LM', 'Learning Method')], max_length=3)),
                ('Lf', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.lifevector')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='open_question', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='OpenLeading',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_type', models.CharField(choices=[('ID', 'Inteligent Dummy')], max_length=3)),
                ('IDummy', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.lifevector')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='open_leading_question', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='DummyList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer', models.CharField(max_length=100)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='dummylist_c', to='app.category')),
                ('decade', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='dummylist_decade', to='app.decade')),
                ('genre', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='dummylist_genre', to='app.genre')),
                ('subCategory', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='dummylist_sub_c', to='app.subcategory')),
            ],
        ),
        migrations.CreateModel(
            name='Closed',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_type', models.CharField(choices=[('DQ', 'Dummy Question'), ('ID', 'Inteligent Dummy')], max_length=3)),
                ('Dummy', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.dummy')),
                ('IDummy', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.lifevector')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='closed_question', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
